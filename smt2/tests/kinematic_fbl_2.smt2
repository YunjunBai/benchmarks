(set-option :print-success false)
(set-option :produce-models true)
(set-option :precision 0.001)
(set-logic QF_NRA)
(declare-fun length () Real)
(declare-fun step_1_a () Real)
(declare-fun step_1_alpha () Real)
(declare-fun step_1_b () Real)
(declare-fun step_1_beta () Real)
(declare-fun step_1_effector.dx () Real)
(declare-fun step_1_effector.dy () Real)
(declare-fun step_1_effector.dz () Real)
(declare-fun step_1_effector.q_a () Real)
(declare-fun step_1_effector.q_i () Real)
(declare-fun step_1_effector.q_j () Real)
(declare-fun step_1_effector.q_k () Real)
(declare-fun step_1_s1.q_a () Real)
(declare-fun step_1_s1.q_k () Real)
(declare-fun step_1_s2.q_a () Real)
(declare-fun step_1_s2.q_i () Real)
(declare-fun step_1_s2.q_j () Real)
(declare-fun step_1_s2.q_k () Real)
(declare-fun step_1_s3.dx () Real)
(declare-fun step_1_s3.dy () Real)
(declare-fun step_2_a () Real)
(declare-fun step_2_alpha () Real)
(declare-fun step_2_b () Real)
(declare-fun step_2_beta () Real)
(declare-fun step_2_effector.dx () Real)
(declare-fun step_2_effector.dy () Real)
(declare-fun step_2_effector.dz () Real)
(declare-fun step_2_effector.q_a () Real)
(declare-fun step_2_effector.q_i () Real)
(declare-fun step_2_effector.q_j () Real)
(declare-fun step_2_effector.q_k () Real)
(declare-fun step_2_s1.q_a () Real)
(declare-fun step_2_s1.q_k () Real)
(declare-fun step_2_s2.q_a () Real)
(declare-fun step_2_s2.q_i () Real)
(declare-fun step_2_s2.q_j () Real)
(declare-fun step_2_s2.q_k () Real)
(declare-fun step_2_s3.dx () Real)
(declare-fun step_2_s3.dy () Real)
(declare-fun step_3_alpha () Real)
(declare-fun step_3_beta () Real)
(declare-fun value_alpha_1 () Real)
(declare-fun value_alpha_2 () Real)
(declare-fun value_beta_1 () Real)
(declare-fun value_beta_2 () Real)
;(assert (<= (* 5.0 step_1_effector.dx) 440.0))
;(assert (>= (* 5.0 step_1_effector.dx) 430.0))
;(assert (<= (* 5.0 step_1_effector.dy) (- 150.0)))
;(assert (>= (* 5.0 step_1_effector.dy) (- 160.0)))
;(assert (>= (* 5.0 step_2_effector.dx) 430.0))
;(assert (<= (* 5.0 step_2_effector.dx) 440.0))
;(assert (>= (* 5.0 step_2_effector.dy) 160.0))
;(assert (<= (* 5.0 step_2_effector.dy) 170.0))
(assert (< (* 100.0 value_alpha_1) 100.0))
(assert (< (* 100.0 value_alpha_2) 100.0))
(assert (< (* 100.0 value_beta_1) 100.0))
(assert (< (* 100.0 value_beta_2) 100.0))
(assert (<= (* 1.0E-6 length) 1000.0))
(assert (>= (* 1.0E-6 length) 50.0))
(assert (< (* 1003.90625 step_1_s3.dx) 1003.90625))
(assert (< (* 1003.90625 step_1_s3.dy) 1003.90625))
(assert (< (* 1003.90625 step_2_s3.dx) 1003.90625))
(assert (< (* 1003.90625 step_2_s3.dy) 1003.90625))
(assert (<= (+ (* 1003.90625 step_1_s3.dx) (- 1000.0)) 0.0))
(assert (<= (+ (* 1003.90625 step_1_s3.dy) (- 1000.0)) 0.0))
(assert (<= (+ (* 1003.90625 step_2_s3.dx) (- 1000.0)) 0.0))
(assert (<= (+ (* 1003.90625 step_2_s3.dy) (- 1000.0)) 0.0))
(assert (<= (+ step_1_a (* (- 1.0) 3.15)) 0.0))
(assert (<= (+ step_1_b (* (- 1.0) 3.15)) 0.0))
(assert (<= (+ step_1_effector.dz (- 1000.0)) 0.0))
(assert (<= (+ step_1_effector.q_a (- 1.0)) 0.0))
(assert (<= (+ step_1_effector.q_i (- 1.0)) 0.0))
(assert (<= (+ step_1_effector.q_j (- 1.0)) 0.0))
(assert (<= (+ step_1_effector.q_k (- 1.0)) 0.0))
(assert (<= (+ step_1_s1.q_a (- 1.0)) 0.0))
(assert (<= (+ step_1_s1.q_k (- 1.0)) 0.0))
(assert (<= (+ step_1_s2.q_a (- 1.0)) 0.0))
(assert (<= (+ step_1_s2.q_i (- 1.0)) 0.0))
(assert (<= (+ step_1_s2.q_j (- 1.0)) 0.0))
(assert (<= (+ step_1_s2.q_k (- 1.0)) 0.0))
(assert (<= (+ step_2_a (* (- 1.0) 3.15)) 0.0))
(assert (<= (+ step_2_b (* (- 1.0) 3.15)) 0.0))
(assert (<= (+ step_2_effector.dz (- 1000.0)) 0.0))
(assert (<= (+ step_2_effector.q_a (- 1.0)) 0.0))
(assert (<= (+ step_2_effector.q_i (- 1.0)) 0.0))
(assert (<= (+ step_2_effector.q_j (- 1.0)) 0.0))
(assert (<= (+ step_2_effector.q_k (- 1.0)) 0.0))
(assert (<= (+ step_2_s1.q_a (- 1.0)) 0.0))
(assert (<= (+ step_2_s1.q_k (- 1.0)) 0.0))
(assert (<= (+ step_2_s2.q_a (- 1.0)) 0.0))
(assert (<= (+ step_2_s2.q_i (- 1.0)) 0.0))
(assert (<= (+ step_2_s2.q_j (- 1.0)) 0.0))
(assert (<= (+ step_2_s2.q_k (- 1.0)) 0.0))
(assert (<= (- 1.0) step_1_effector.q_a))
(assert (<= (- 1.0) step_1_effector.q_i))
(assert (<= (- 1.0) step_1_effector.q_j))
(assert (<= (- 1.0) step_1_effector.q_k))
(assert (<= (- 1.0) step_1_s1.q_a))
(assert (<= (- 1.0) step_1_s1.q_k))
(assert (<= (- 1.0) step_1_s2.q_a))
(assert (<= (- 1.0) step_1_s2.q_i))
(assert (<= (- 1.0) step_1_s2.q_j))
(assert (<= (- 1.0) step_1_s2.q_k))
(assert (<= (- 1.0) step_2_effector.q_a))
(assert (<= (- 1.0) step_2_effector.q_i))
(assert (<= (- 1.0) step_2_effector.q_j))
(assert (<= (- 1.0) step_2_effector.q_k))
(assert (<= (- 1.0) step_2_s1.q_a))
(assert (<= (- 1.0) step_2_s1.q_k))
(assert (<= (- 1.0) step_2_s2.q_a))
(assert (<= (- 1.0) step_2_s2.q_i))
(assert (<= (- 1.0) step_2_s2.q_j))
(assert (<= (- 1.0) step_2_s2.q_k))
(assert (<= step_1_effector.q_a 1.0))
(assert (<= step_1_effector.q_i 1.0))
(assert (<= step_1_effector.q_j 1.0))
(assert (<= step_1_effector.q_k 1.0))
(assert (<= step_1_s1.q_a 1.0))
(assert (<= step_1_s1.q_k 1.0))
(assert (<= step_1_s2.q_a 1.0))
(assert (<= step_1_s2.q_i 1.0))
(assert (<= step_1_s2.q_j 1.0))
(assert (<= step_1_s2.q_k 1.0))
(assert (<= step_2_effector.q_a 1.0))
(assert (<= step_2_effector.q_i 1.0))
(assert (<= step_2_effector.q_j 1.0))
(assert (<= step_2_effector.q_k 1.0))
(assert (<= step_2_s1.q_a 1.0))
(assert (<= step_2_s1.q_k 1.0))
(assert (<= step_2_s2.q_a 1.0))
(assert (<= step_2_s2.q_i 1.0))
(assert (<= step_2_s2.q_j 1.0))
(assert (<= step_2_s2.q_k 1.0))
(assert (= step_1_effector.q_i 0.0))
(assert (= step_1_effector.q_j 0.0))
(assert (= step_2_effector.q_i 0.0))
(assert (= step_2_effector.q_j 0.0))
(assert (= (* 1.0E-6 step_1_alpha) (* 100.0 value_alpha_0)))
(assert (= (+ (* (- 1.0) (* 1003.90625 step_1_s3.dx)) (* (* 1.0E-6 length) (^ step_1_s1.q_a 2.0)) (* (- 1.0) (* 1.0E-6 length) (^ step_1_s1.q_k 2.0))) 0.0))
(assert (= (+ (* (- 1.0) (* 1003.90625 step_2_s3.dx)) (* (* 1.0E-6 length) (^ step_2_s1.q_a 2.0)) (* (- 1.0) (* 1.0E-6 length) (^ step_2_s1.q_k 2.0))) 0.0))
(assert (= (+ (* (- 1.0) (^ step_1_s2.q_k 2.0) (* 1.0E-6 length)) (* (- 1.0) (* 1003.90625 step_1_s3.dx)) (* (^ step_1_s2.q_a 2.0) (* 1.0E-6 length)) (* 1.0E-6 length) (* (^ step_1_s2.q_i 2.0) (* 1.0E-6 length)) (* (- 2.0) step_1_effector.q_i step_1_effector.q_j (* 1.0E-6 length)) (* 2.0 step_1_effector.q_a step_1_effector.q_k (* 1.0E-6 length)) (* (- 1.0) (^ step_1_s2.q_j 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* (- 1.0) (^ step_1_s2.q_k 2.0)) (* (- 1.0) (^ step_1_effector.q_j 2.0)) (^ step_1_s2.q_j 2.0) (^ step_1_s2.q_a 2.0) (* (- 1.0) (^ step_1_s2.q_i 2.0)) (^ step_1_effector.q_k 2.0) (* (- 1.0) (^ step_1_effector.q_a 2.0)) (^ step_1_effector.q_i 2.0)) 0.0))
(assert (= (+ (* (- 1.0) (^ step_2_s2.q_k 2.0) (* 1.0E-6 length)) (* (- 1.0) (* 1003.90625 step_2_s3.dx)) (* (^ step_2_s2.q_a 2.0) (* 1.0E-6 length)) (* 1.0E-6 length) (* (^ step_2_s2.q_i 2.0) (* 1.0E-6 length)) (* (- 2.0) step_2_effector.q_i step_2_effector.q_j (* 1.0E-6 length)) (* 2.0 step_2_effector.q_a step_2_effector.q_k (* 1.0E-6 length)) (* (- 1.0) (^ step_2_s2.q_j 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* (- 1.0) (^ step_2_s2.q_k 2.0)) (* (- 1.0) (^ step_2_effector.q_j 2.0)) (^ step_2_s2.q_j 2.0) (^ step_2_s2.q_a 2.0) (* (- 1.0) (^ step_2_s2.q_i 2.0)) (^ step_2_effector.q_k 2.0) (* (- 1.0) (^ step_2_effector.q_a 2.0)) (^ step_2_effector.q_i 2.0)) 0.0))
(assert (= (+ (* (- 1.0) step_1_effector.q_a step_1_effector.q_k (* 1.0E-6 length)) (* 1003.90625 step_1_s3.dx) (* (- 1.0) (* 5.0 step_1_effector.dx)) (* step_1_effector.q_i step_1_effector.q_j (* 1.0E-6 length))) 0.0))
(assert (= (+ (* (- 1.0) step_1_s1.q_k) (sin ( / step_1_a 2.0))) 0.0))
(assert (= (+ (* (- 1.0) step_2_effector.q_a step_2_effector.q_k (* 1.0E-6 length)) (* 1003.90625 step_2_s3.dx) (* (- 1.0) (* 5.0 step_2_effector.dx)) (* step_2_effector.q_i step_2_effector.q_j (* 1.0E-6 length))) 0.0))
(assert (= (+ (* (- 1.0) step_2_s1.q_k) (sin ( / step_2_a 2.0))) 0.0))
(assert (= (+ (* (- 2.0) step_1_s2.q_a step_1_s2.q_i) (* (- 2.0) step_1_s2.q_k step_1_s2.q_j)) 0.0))
(assert (= (+ (* (- 2.0) step_2_s2.q_a step_2_s2.q_i) (* (- 2.0) step_2_s2.q_k step_2_s2.q_j)) 0.0))
(assert (= (+ (* 1003.90625 step_1_s3.dy) (* ( / 1.0 2.0) (^ step_1_effector.q_a 2.0) (* 1.0E-6 length)) (* ( / 1.0 2.0) (^ step_1_effector.q_j 2.0) (* 1.0E-6 length)) (* (- 1.0) (* 5.0 step_1_effector.dy)) (* ( / (- 1.0) 2.0) (^ step_1_effector.q_i 2.0) (* 1.0E-6 length)) (* ( / (- 1.0) 2.0) (^ step_1_effector.q_k 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 1003.90625 step_1_s3.dy) (* (- 1.0) (^ step_1_effector.q_k 2.0) (* 1.0E-6 length)) (* (- 2.0) step_1_s2.q_i step_1_s2.q_j (* 1.0E-6 length)) (* (^ step_1_effector.q_j 2.0) (* 1.0E-6 length)) (* (- 1.0) (^ step_1_effector.q_i 2.0) (* 1.0E-6 length)) (* (- 2.0) step_1_s2.q_k step_1_s2.q_a (* 1.0E-6 length)) (* (^ step_1_effector.q_a 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 1003.90625 step_2_s3.dy) (* ( / 1.0 2.0) (^ step_2_effector.q_a 2.0) (* 1.0E-6 length)) (* ( / 1.0 2.0) (^ step_2_effector.q_j 2.0) (* 1.0E-6 length)) (* (- 1.0) (* 5.0 step_2_effector.dy)) (* ( / (- 1.0) 2.0) (^ step_2_effector.q_i 2.0) (* 1.0E-6 length)) (* ( / (- 1.0) 2.0) (^ step_2_effector.q_k 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 1003.90625 step_2_s3.dy) (* (- 1.0) (^ step_2_effector.q_k 2.0) (* 1.0E-6 length)) (* (- 2.0) step_2_s2.q_i step_2_s2.q_j (* 1.0E-6 length)) (* (^ step_2_effector.q_j 2.0) (* 1.0E-6 length)) (* (- 1.0) (^ step_2_effector.q_i 2.0) (* 1.0E-6 length)) (* (- 2.0) step_2_s2.q_k step_2_s2.q_a (* 1.0E-6 length)) (* (^ step_2_effector.q_a 2.0) (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 2.0 step_1_s1.q_a step_1_s1.q_k (* 1.0E-6 length)) (* (- 1.0) (* 1003.90625 step_1_s3.dy))) 0.0))
(assert (= (+ (* 2.0 step_1_s2.q_a step_1_s2.q_j (* 1.0E-6 length)) (* 2.0 step_1_effector.q_j step_1_effector.q_k (* 1.0E-6 length)) (* 2.0 step_1_effector.q_a step_1_effector.q_i (* 1.0E-6 length)) (* (- 2.0) step_1_s2.q_k step_1_s2.q_i (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 2.0 step_1_s2.q_i step_1_s2.q_j) (* (- 2.0) step_1_s2.q_k step_1_s2.q_a) (* (- 2.0) step_1_effector.q_i step_1_effector.q_j) (* 2.0 step_1_effector.q_a step_1_effector.q_k)) 0.0))
(assert (= (+ (* 2.0 step_1_s2.q_k step_1_s2.q_a) (* (- 2.0) step_1_s2.q_i step_1_s2.q_j)) 0.0))
(assert (= (+ (* 2.0 step_1_s2.q_k step_1_s2.q_j) (* 2.0 step_1_s2.q_a step_1_s2.q_i) (* (- 2.0) step_1_effector.q_j step_1_effector.q_k) (* (- 2.0) step_1_effector.q_a step_1_effector.q_i)) 0.0))
(assert (= (+ (* 2.0 step_2_s1.q_a step_2_s1.q_k (* 1.0E-6 length)) (* (- 1.0) (* 1003.90625 step_2_s3.dy))) 0.0))
(assert (= (+ (* 2.0 step_2_s2.q_a step_2_s2.q_j (* 1.0E-6 length)) (* 2.0 step_2_effector.q_j step_2_effector.q_k (* 1.0E-6 length)) (* 2.0 step_2_effector.q_a step_2_effector.q_i (* 1.0E-6 length)) (* (- 2.0) step_2_s2.q_k step_2_s2.q_i (* 1.0E-6 length))) 0.0))
(assert (= (+ (* 2.0 step_2_s2.q_i step_2_s2.q_j) (* (- 2.0) step_2_s2.q_k step_2_s2.q_a) (* (- 2.0) step_2_effector.q_i step_2_effector.q_j) (* 2.0 step_2_effector.q_a step_2_effector.q_k)) 0.0))
(assert (= (+ (* 2.0 step_2_s2.q_k step_2_s2.q_a) (* (- 2.0) step_2_s2.q_i step_2_s2.q_j)) 0.0))
(assert (= (+ (* 2.0 step_2_s2.q_k step_2_s2.q_j) (* 2.0 step_2_s2.q_a step_2_s2.q_i) (* (- 2.0) step_2_effector.q_j step_2_effector.q_k) (* (- 2.0) step_2_effector.q_a step_2_effector.q_i)) 0.0))
(assert (= (+ (* step_1_effector.q_j step_1_effector.q_k (* 1.0E-6 length)) (* step_1_effector.q_a step_1_effector.q_i (* 1.0E-6 length)) (* (- 1.0) step_1_effector.dz)) 0.0))
(assert (= (+ (* step_1_s1.q_a (cos ( / step_1_b 2.0))) (* (- 1.0) step_1_effector.q_a) (* (- 1.0) (sin ( / step_1_b 2.0)) step_1_s1.q_k)) 0.0))
(assert (= (+ (* step_1_s1.q_k (cos ( / step_1_b 2.0))) (* (- 1.0) step_1_effector.q_k) (* (sin ( / step_1_b 2.0)) step_1_s1.q_a)) 0.0))
(assert (= (+ (* step_2_effector.q_j step_2_effector.q_k (* 1.0E-6 length)) (* step_2_effector.q_a step_2_effector.q_i (* 1.0E-6 length)) (* (- 1.0) step_2_effector.dz)) 0.0))
(assert (= (+ (* step_2_s1.q_a (cos ( / step_2_b 2.0))) (* (- 1.0) step_2_effector.q_a) (* (- 1.0) (sin ( / step_2_b 2.0)) step_2_s1.q_k)) 0.0))
(assert (= (+ (* step_2_s1.q_k (cos ( / step_2_b 2.0))) (* (- 1.0) step_2_effector.q_k) (* (sin ( / step_2_b 2.0)) step_2_s1.q_a)) 0.0))
(assert (= (+ (^ step_1_effector.q_a 2.0) (- 1.0) (^ step_1_effector.q_i 2.0) (^ step_1_effector.q_k 2.0) (^ step_1_effector.q_j 2.0)) 0.0))
(assert (= (+ (^ step_1_s1.q_a 2.0) (- 1.0) (^ step_1_s1.q_k 2.0)) 0.0))
(assert (= (+ (^ step_1_s2.q_a 2.0) (- 1.0) (^ step_1_s2.q_i 2.0) (^ step_1_s2.q_k 2.0) (^ step_1_s2.q_j 2.0)) 0.0))
(assert (= (+ (^ step_2_effector.q_a 2.0) (- 1.0) (^ step_2_effector.q_i 2.0) (^ step_2_effector.q_k 2.0) (^ step_2_effector.q_j 2.0)) 0.0))
(assert (= (+ (^ step_2_s1.q_a 2.0) (- 1.0) (^ step_2_s1.q_k 2.0)) 0.0))
(assert (= (+ (^ step_2_s2.q_a 2.0) (- 1.0) (^ step_2_s2.q_i 2.0) (^ step_2_s2.q_k 2.0) (^ step_2_s2.q_j 2.0)) 0.0))
(assert (= (+ (cos ( / step_1_a 2.0)) (* (- 1.0) step_1_s1.q_a)) 0.0))
(assert (= (+ (cos ( / step_2_a 2.0)) (* (- 1.0) step_2_s1.q_a)) 0.0))
(assert (= (+ 1.0 (* (- 1.0) (^ step_1_s2.q_a 2.0)) (^ step_1_s2.q_i 2.0) (* (- 1.0) (^ step_1_s2.q_j 2.0)) (^ step_1_s2.q_k 2.0)) 0.0))
(assert (= (+ 1.0 (* (- 1.0) (^ step_2_s2.q_a 2.0)) (^ step_2_s2.q_i 2.0) (* (- 1.0) (^ step_2_s2.q_j 2.0)) (^ step_2_s2.q_k 2.0)) 0.0))
(assert (= (+ step_1_a (* (- 1.0) 57.29582790879778 (* 1.0E-6 step_1_alpha))) 0.0))
(assert (= (+ step_1_b (* (- 1.0) 57.29582790879778 (* 1.0E-6 step_1_beta))) 0.0))
(assert (= (+ step_2_a (* (- 1.0) 57.29582790879778 step_2_alpha)) 0.0))
(assert (= (+ step_2_b (* (- 1.0) 57.29582790879778 step_2_beta)) 0.0))
(assert (= step_2_alpha (* 100.0 value_alpha_1)))
(assert (= step_2_beta (* 100.0 value_beta_1)))
(assert (= step_3_alpha (* 100.0 value_alpha_2)))
(assert (= step_3_beta (* 100.0 value_beta_2)))
(assert (> (* 100.0 value_alpha_1) (- 100.0)))
(assert (> (* 100.0 value_alpha_2) (- 100.0)))
(assert (> (* 100.0 value_beta_1) (- 100.0)))
(assert (> (* 100.0 value_beta_2) (- 100.0)))
(assert (> (* 1003.90625 step_1_s3.dx) (- 1003.90625)))
(assert (> (* 1003.90625 step_1_s3.dy) (- 1003.90625)))
(assert (> (* 1003.90625 step_2_s3.dx) (- 1003.90625)))
(assert (> (* 1003.90625 step_2_s3.dy) (- 1003.90625)))
(assert (>= (+ (* 1003.90625 step_1_s3.dx) 1000.0) 0.0))
(assert (>= (+ (* 1003.90625 step_1_s3.dy) 1000.0) 0.0))
(assert (>= (+ (* 1003.90625 step_2_s3.dx) 1000.0) 0.0))
(assert (>= (+ (* 1003.90625 step_2_s3.dy) 1000.0) 0.0))
(assert (>= (+ step_1_a (* (- 1.0) (- 3.15))) 0.0))
(assert (>= (+ step_1_b (* (- 1.0) (- 3.15))) 0.0))
(assert (>= (+ step_1_effector.dz 1000.0) 0.0))
(assert (>= (+ step_1_effector.q_a 1.0) 0.0))
(assert (>= (+ step_1_effector.q_i 1.0) 0.0))
(assert (>= (+ step_1_effector.q_j 1.0) 0.0))
(assert (>= (+ step_1_effector.q_k 1.0) 0.0))
(assert (>= (+ step_1_s1.q_a 1.0) 0.0))
(assert (>= (+ step_1_s1.q_k 1.0) 0.0))
(assert (>= (+ step_1_s2.q_a 1.0) 0.0))
(assert (>= (+ step_1_s2.q_i 1.0) 0.0))
(assert (>= (+ step_1_s2.q_j 1.0) 0.0))
(assert (>= (+ step_1_s2.q_k 1.0) 0.0))
(assert (>= (+ step_2_a (* (- 1.0) (- 3.15))) 0.0))
(assert (>= (+ step_2_b (* (- 1.0) (- 3.15))) 0.0))
(assert (>= (+ step_2_effector.dz 1000.0) 0.0))
(assert (>= (+ step_2_effector.q_a 1.0) 0.0))
(assert (>= (+ step_2_effector.q_i 1.0) 0.0))
(assert (>= (+ step_2_effector.q_j 1.0) 0.0))
(assert (>= (+ step_2_effector.q_k 1.0) 0.0))
(assert (>= (+ step_2_s1.q_a 1.0) 0.0))
(assert (>= (+ step_2_s1.q_k 1.0) 0.0))
(assert (>= (+ step_2_s2.q_a 1.0) 0.0))
(assert (>= (+ step_2_s2.q_i 1.0) 0.0))
(assert (>= (+ step_2_s2.q_j 1.0) 0.0))
(assert (>= (+ step_2_s2.q_k 1.0) 0.0))
(check-sat)
(exit)
