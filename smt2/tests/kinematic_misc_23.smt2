(set-option :precision 0.01)
(set-logic QF_NRA)
(declare-fun ua () Real)
(declare-fun ui () Real)
(declare-fun uj () Real)
(declare-fun uk () Real)
(declare-fun ux () Real)
(declare-fun uy () Real)
(declare-fun uz () Real)
(declare-fun la () Real)
(declare-fun li () Real)
(declare-fun lj () Real)
(declare-fun lk () Real)
(declare-fun lx () Real)
(declare-fun ly () Real)
(declare-fun lz () Real)
(declare-fun ea () Real)
(declare-fun ei () Real)
(declare-fun ej () Real)
(declare-fun ek () Real)
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun z () Real)
(declare-fun ba () Real)
(declare-fun bi () Real)
(declare-fun bj () Real)
(declare-fun bk () Real)
(declare-fun bx () Real)
(declare-fun by () Real)
(declare-fun bz () Real)
(declare-fun uca () Real)
(declare-fun uci () Real)
(declare-fun ucj () Real)
(declare-fun uck () Real)
(declare-fun ucx () Real)
(declare-fun ucy () Real)
(declare-fun ucz () Real)
(declare-fun ca () Real)
(declare-fun ci () Real)
(declare-fun cj () Real)
(declare-fun ck () Real)
(declare-fun cx () Real)
(declare-fun cy () Real)
(declare-fun cz () Real)
(declare-fun alpha () Real)
(declare-fun beta () Real)
(declare-fun gamma () Real)
(assert ( = ( + ( ^ uk 2 ) ( ^ uj 2 ) ( ^ ui 2 ) ( ^ ua 2 ) ) 1 ) )
(assert ( >= ua -1 ) )
(assert ( <= ua 1 ) )
(assert ( >= ui -1 ) )
(assert ( <= ui 1 ) )
(assert ( >= uj -1 ) )
(assert ( <= uj 1 ) )
(assert ( >= uk -1 ) )
(assert ( <= uk 1 ) )
(assert ( >= ux -500 ) )
(assert ( <= ux 500 ) )
(assert ( >= uy -500 ) )
(assert ( <= uy 500 ) )
(assert ( >= uz -500 ) )
(assert ( <= uz 500 ) )
(assert ( = ( + ( ^ lk 2 ) ( ^ lj 2 ) ( ^ li 2 ) ( ^ la 2 ) ) 1 ) )
(assert ( >= la -1 ) )
(assert ( <= la 1 ) )
(assert ( >= li -1 ) )
(assert ( <= li 1 ) )
(assert ( >= lj -1 ) )
(assert ( <= lj 1 ) )
(assert ( >= lk -1 ) )
(assert ( <= lk 1 ) )
(assert ( >= lx -500 ) )
(assert ( <= lx 500 ) )
(assert ( >= ly -500 ) )
(assert ( <= ly 500 ) )
(assert ( >= lz -500 ) )
(assert ( <= lz 500 ) )
(assert ( = ( + ( ^ ek 2 ) ( ^ ej 2 ) ( ^ ei 2 ) ( ^ ea 2 ) ) 1 ) )
(assert ( >= ea -1 ) )
(assert ( <= ea 1 ) )
(assert ( >= ei -1 ) )
(assert ( <= ei 1 ) )
(assert ( >= ej -1 ) )
(assert ( <= ej 1 ) )
(assert ( >= ek -1 ) )
(assert ( <= ek 1 ) )
(assert ( >= x -500 ) )
(assert ( <= x 500 ) )
(assert ( >= y -500 ) )
(assert ( <= y 500 ) )
(assert ( >= z -500 ) )
(assert ( <= z 500 ) )
(assert ( = ( + ( ^ bk 2 ) ( ^ bj 2 ) ( ^ bi 2 ) ( ^ ba 2 ) ) 1 ) )
(assert ( >= ba -1 ) )
(assert ( <= ba 1 ) )
(assert ( >= bi -1 ) )
(assert ( <= bi 1 ) )
(assert ( >= bj -1 ) )
(assert ( <= bj 1 ) )
(assert ( >= bk -1 ) )
(assert ( <= bk 1 ) )
(assert ( >= bx -500 ) )
(assert ( <= bx 500 ) )
(assert ( >= by -500 ) )
(assert ( <= by 500 ) )
(assert ( >= bz -500 ) )
(assert ( <= bz 500 ) )
(assert ( = ( + ( ^ uck 2 ) ( ^ ucj 2 ) ( ^ uci 2 ) ( ^ uca 2 ) ) 1 ) )
(assert ( >= uca -1 ) )
(assert ( <= uca 1 ) )
(assert ( >= uci -1 ) )
(assert ( <= uci 1 ) )
(assert ( >= ucj -1 ) )
(assert ( <= ucj 1 ) )
(assert ( >= uck -1 ) )
(assert ( <= uck 1 ) )
(assert ( >= ucx -500 ) )
(assert ( <= ucx 500 ) )
(assert ( >= ucy -500 ) )
(assert ( <= ucy 500 ) )
(assert ( >= ucz -500 ) )
(assert ( <= ucz 500 ) )
(assert ( = ( + ( ^ ck 2 ) ( ^ cj 2 ) ( ^ ci 2 ) ( ^ ca 2 ) ) 1 ) )
(assert ( >= ca -1 ) )
(assert ( <= ca 1 ) )
(assert ( >= ci -1 ) )
(assert ( <= ci 1 ) )
(assert ( >= cj -1 ) )
(assert ( <= cj 1 ) )
(assert ( >= ck -1 ) )
(assert ( <= ck 1 ) )
(assert ( >= cx -500 ) )
(assert ( <= cx 500 ) )
(assert ( >= cy -500 ) )
(assert ( <= cy 500 ) )
(assert ( >= cz -500 ) )
(assert ( <= cz 500 ) )
(assert ( >= alpha -3.15 ) )
(assert ( <= alpha 3.15 ) )
(assert ( >= beta -3.15 ) )
(assert ( <= beta 3.15 ) )
(assert ( >= gamma -3.15 ) )
(assert ( <= gamma 3.15 ) )
(assert ( = 0 bx ) )
(assert ( = 0 by ) )
(assert ( = 0 bz ) )
(assert ( = ( cos ( / gamma 2 ) ) ba ) )
(assert ( = 0 bi ) )
(assert ( = 0 bj ) )
(assert ( = ( sin ( / gamma 2 ) ) bk ) )
(assert ( = bx ux ) )
(assert ( = by uy ) )
(assert ( = bz uz ) )
(assert ( = ( + ( * ( cos ( / alpha 2 ) ) ba ) ( - ( * ( sin ( / alpha 2 ) ) bj ) ) ) ua ) )
(assert ( = ( + ( * ( cos ( / alpha 2 ) ) bi ) ( - ( * ( sin ( / alpha 2 ) ) bk ) ) ) ui ) )
(assert ( = ( + ( * ( cos ( / alpha 2 ) ) bj ) ( * ( sin ( / alpha 2 ) ) ba ) ) uj ) )
(assert ( = ( + ( * ( cos ( / alpha 2 ) ) bk ) ( * ( sin ( / alpha 2 ) ) bi ) ) uk ) )
(assert ( = bx cx ) )
(assert ( = by cy ) )
(assert ( = bz cz ) )
(assert ( = ( + ( * ba ( cos ( / beta 2 ) ) ) ( - ( * ( sin ( / beta 2 ) ) bj ) ) ) ca ) )
(assert ( = ( + ( * ( cos ( / beta 2 ) ) bi ) ( - ( * ( sin ( / beta 2 ) ) bk ) ) ) ci ) )
(assert ( = ( + ( * ( cos ( / beta 2 ) ) bj ) ( * ba ( sin ( / beta 2 ) ) ) ) cj ) )
(assert ( = ( + ( * ( cos ( / beta 2 ) ) bk ) ( * ( sin ( / beta 2 ) ) bi ) ) ck ) )
(assert ( = ( + cx ( * 50 ( ^ ck 2 ) ) ( * 50 ( ^ cj 2 ) ) ( - ( * 50 ( ^ ci 2 ) ) ) ( - ( * 50 ( ^ ca 2 ) ) ) ) ucx ) )
(assert ( = ( + cy ( - ( * 100 ca ck ) ) ( - ( * 100 ci cj ) ) ) ucy ) )
(assert ( = ( + cz ( - ( * 100 ci ck ) ) ( * 100 ca cj ) ) ucz ) )
(assert ( = ( + ( * 2 ci cj ) ( - ( * 2 ca ck ) ) ) ( + ( * 2 uci ucj ) ( - ( * 2 uca uck ) ) ) ) )
(assert ( = ( + ( - ( ^ ck 2 ) ) ( ^ cj 2 ) ( - ( ^ ci 2 ) ) ( ^ ca 2 ) ) ( + ( - ( ^ uck 2 ) ) ( ^ ucj 2 ) ( - ( ^ uci 2 ) ) ( ^ uca 2 ) ) ) )
(assert ( = ( + ( * 2 cj ck ) ( * 2 ca ci ) ) ( + ( * 2 ucj uck ) ( * 2 uca uci ) ) ) )
(assert ( = ( + ux ( - ( * 148 ( ^ uk 2 ) ) ) ( - ( * 148 ( ^ uj 2 ) ) ) ( * 148 ( ^ ui 2 ) ) ( * 148 ( ^ ua 2 ) ) ) lx ) )
(assert ( = ( + uy ( * 296 ua uk ) ( * 296 ui uj ) ) ly ) )
(assert ( = ( + uz ( * 296 ui uk ) ( - ( * 296 ua uj ) ) ) lz ) )
(assert ( = ( + ( * 2 ui uj ) ( - ( * 2 ua uk ) ) ) ( + ( * 2 li lj ) ( - ( * 2 la lk ) ) ) ) )
(assert ( = ( + ( - ( ^ uk 2 ) ) ( ^ uj 2 ) ( - ( ^ ui 2 ) ) ( ^ ua 2 ) ) ( + ( - ( ^ lk 2 ) ) ( ^ lj 2 ) ( - ( ^ li 2 ) ) ( ^ la 2 ) ) ) )
(assert ( = ( + ( * 2 uj uk ) ( * 2 ua ui ) ) ( + ( * 2 lj lk ) ( * 2 la li ) ) ) )
(assert ( = ( + ucx ( - ( * 148 ( ^ uck 2 ) ) ) ( - ( * 148 ( ^ ucj 2 ) ) ) ( * 148 ( ^ uci 2 ) ) ( * 148 ( ^ uca 2 ) ) ) ( + lx ( * 50 ( ^ lk 2 ) ) ( * 50 ( ^ lj 2 ) ) ( - ( * 50 ( ^ li 2 ) ) ) ( - ( * 50 ( ^ la 2 ) ) ) ) ) )
(assert ( = ( + ucy ( * 296 uca uck ) ( * 296 uci ucj ) ) ( + ly ( - ( * 100 la lk ) ) ( - ( * 100 li lj ) ) ) ) )
(assert ( = ( + ucz ( * 296 uci uck ) ( - ( * 296 uca ucj ) ) ) ( + lz ( - ( * 100 li lk ) ) ( * 100 la lj ) ) ) )
(assert ( = ( + ( * 2 uci ucj ) ( - ( * 2 uca uck ) ) ) ( + ( * 2 li lj ) ( - ( * 2 la lk ) ) ) ) )
(assert ( = ( + ( - ( ^ uck 2 ) ) ( ^ ucj 2 ) ( - ( ^ uci 2 ) ) ( ^ uca 2 ) ) ( + ( - ( ^ lk 2 ) ) ( ^ lj 2 ) ( - ( ^ li 2 ) ) ( ^ la 2 ) ) ) )
(assert ( = ( + ( * 2 ucj uck ) ( * 2 uca uci ) ) ( + ( * 2 lj lk ) ( * 2 la li ) ) ) )
(assert ( = ( + lx ( - ( * 160 ( ^ lk 2 ) ) ) ( - ( * 160 ( ^ lj 2 ) ) ) ( * 160 ( ^ li 2 ) ) ( * 160 ( ^ la 2 ) ) ) x ) )
(assert ( = ( + ly ( * 320 la lk ) ( * 320 li lj ) ) y ) )
(assert ( = ( + lz ( * 320 li lk ) ( - ( * 320 la lj ) ) ) z ) )
(assert ( = la ea ) )
(assert ( = li ei ) )
(assert ( = lj ej ) )
(assert ( = lk ek ) )
(check-sat)
(exit)