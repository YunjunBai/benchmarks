(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:41:06 2012
(declare-fun b.speed_loss__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(declare-fun b.x__AT0 () Real)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.speed_x__AT0 () Real)
(declare-fun b.time__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun b.EVENT.1__AT0 () Bool)
(assert (let ((.def_77 (* (- (/ 49 10)) b.speed_y__AT0)))
(let ((.def_111 (* 3.0 .def_77)))
(let ((.def_192 (* (- 1.0) .def_111)))
(let ((.def_214 (* 2.0 .def_192)))
(let ((.def_226 (* (- 1.0) .def_214)))
(let ((.def_227 (* b.delta__AT0 .def_226)))
(let ((.def_228 (* (- 50.0) .def_227)))
(let ((.def_82 (* b.speed_y__AT0 b.speed_y__AT0)))
(let ((.def_145 (* (- 50.0) .def_82)))
(let ((.def_232 (+ .def_145 .def_228)))
(let ((.def_68 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_143 (* (- 7203.0) .def_68)))
(let ((.def_233 (+ .def_143 .def_232)))
(let ((.def_148 (* 490.0 b.y__AT0)))
(let ((.def_234 (+ .def_148 .def_233)))
(let ((.def_235 (<= .def_234 0.0 )))
(let ((.def_156 (* (- 5.0) .def_82)))
(let ((.def_157 (* 49.0 b.y__AT0)))
(let ((.def_159 (+ .def_157 .def_156)))
(let ((.def_160 (<= .def_159 0.0 )))
(let ((.def_236 (and .def_160 .def_235)))
(let ((.def_164 (* (- 49.0) b.delta__AT0)))
(let ((.def_165 (* 5.0 b.speed_y__AT0)))
(let ((.def_167 (+ .def_165 .def_164)))
(let ((.def_171 (<= 0.0 .def_167)))
(let ((.def_170 (<= 0.0 b.speed_y__AT0)))
(let ((.def_172 (and .def_170 .def_171)))
(let ((.def_168 (<= .def_167 0.0 )))
(let ((.def_162 (<= b.speed_y__AT0 0.0 )))
(let ((.def_169 (and .def_162 .def_168)))
(let ((.def_173 (or .def_169 .def_172)))
(let ((.def_237 (and .def_173 .def_236)))
(let ((.def_215 (* b.delta__AT0 .def_214)))
(let ((.def_216 (* 50.0 .def_215)))
(let ((.def_220 (+ .def_145 .def_216)))
(let ((.def_221 (+ .def_143 .def_220)))
(let ((.def_222 (+ .def_148 .def_221)))
(let ((.def_223 (<= 0.0 .def_222)))
(let ((.def_186 (<= 0.0 .def_159)))
(let ((.def_224 (and .def_186 .def_223)))
(let ((.def_225 (and .def_173 .def_224)))
(let ((.def_238 (or .def_225 .def_237)))
(let ((.def_86 (* (- (/ 49 10)) b.y__AT0)))
(let ((.def_120 (* 2.0 .def_86)))
(let ((.def_201 (* (- 1.0) .def_120)))
(let ((.def_202 (* b.delta__AT0 .def_201)))
(let ((.def_203 (* (- 50.0) .def_202)))
(let ((.def_115 (* 2.0 .def_82)))
(let ((.def_196 (* (- 1.0) .def_115)))
(let ((.def_197 (* b.delta__AT0 .def_196)))
(let ((.def_199 (* (- 25.0) .def_197)))
(let ((.def_207 (+ .def_199 .def_203)))
(let ((.def_193 (* .def_68 .def_192)))
(let ((.def_194 (* (- 50.0) .def_193)))
(let ((.def_208 (+ .def_194 .def_207)))
(let ((.def_90 (* b.y__AT0 b.speed_y__AT0)))
(let ((.def_126 (* 50.0 .def_90)))
(let ((.def_209 (+ .def_126 .def_208)))
(let ((.def_69 (* b.delta__AT0 .def_68)))
(let ((.def_124 (* 2401.0 .def_69)))
(let ((.def_210 (+ .def_124 .def_209)))
(let ((.def_128 (* 25.0 b.speed_x__AT0)))
(let ((.def_211 (+ .def_128 .def_210)))
(let ((.def_212 (<= .def_211 0.0 )))
(let ((.def_107 (* 2.0 .def_90)))
(let ((.def_108 (+ b.speed_x__AT0 .def_107)))
(let ((.def_191 (<= .def_108 0.0 )))
(let ((.def_213 (and .def_191 .def_212)))
(let ((.def_239 (and .def_213 .def_238)))
(let ((.def_137 (* 2.0 .def_111)))
(let ((.def_176 (* (- 1.0) .def_137)))
(let ((.def_177 (* b.delta__AT0 .def_176)))
(let ((.def_178 (* 50.0 .def_177)))
(let ((.def_182 (+ .def_145 .def_178)))
(let ((.def_183 (+ .def_143 .def_182)))
(let ((.def_184 (+ .def_148 .def_183)))
(let ((.def_185 (<= 0.0 .def_184)))
(let ((.def_187 (and .def_185 .def_186)))
(let ((.def_188 (and .def_173 .def_187)))
(let ((.def_138 (* b.delta__AT0 .def_137)))
(let ((.def_140 (* (- 50.0) .def_138)))
(let ((.def_150 (+ .def_145 .def_140)))
(let ((.def_151 (+ .def_143 .def_150)))
(let ((.def_152 (+ .def_148 .def_151)))
(let ((.def_153 (<= .def_152 0.0 )))
(let ((.def_161 (and .def_153 .def_160)))
(let ((.def_174 (and .def_161 .def_173)))
(let ((.def_189 (or .def_174 .def_188)))
(let ((.def_121 (* b.delta__AT0 .def_120)))
(let ((.def_122 (* 50.0 .def_121)))
(let ((.def_116 (* b.delta__AT0 .def_115)))
(let ((.def_118 (* 25.0 .def_116)))
(let ((.def_130 (+ .def_118 .def_122)))
(let ((.def_112 (* .def_68 .def_111)))
(let ((.def_114 (* 50.0 .def_112)))
(let ((.def_131 (+ .def_114 .def_130)))
(let ((.def_132 (+ .def_126 .def_131)))
(let ((.def_133 (+ .def_124 .def_132)))
(let ((.def_134 (+ .def_128 .def_133)))
(let ((.def_135 (<= 0.0 .def_134)))
(let ((.def_109 (<= 0.0 .def_108)))
(let ((.def_136 (and .def_109 .def_135)))
(let ((.def_190 (and .def_136 .def_189)))
(let ((.def_240 (or .def_190 .def_239)))
(let ((.def_91 (* b.delta__AT0 .def_90)))
(let ((.def_92 (* 200.0 .def_91)))
(let ((.def_87 (* .def_68 .def_86)))
(let ((.def_88 (* 200.0 .def_87)))
(let ((.def_98 (+ .def_88 .def_92)))
(let ((.def_83 (* .def_68 .def_82)))
(let ((.def_84 (* 100.0 .def_83)))
(let ((.def_99 (+ .def_84 .def_98)))
(let ((.def_78 (* .def_69 .def_77)))
(let ((.def_80 (* 200.0 .def_78)))
(let ((.def_100 (+ .def_80 .def_99)))
(let ((.def_70 (* b.delta__AT0 .def_69)))
(let ((.def_72 (* 2401.0 .def_70)))
(let ((.def_101 (+ .def_72 .def_100)))
(let ((.def_65 (* b.speed_x__AT0 b.delta__AT0)))
(let ((.def_67 (* 100.0 .def_65)))
(let ((.def_102 (+ .def_67 .def_101)))
(let ((.def_50 (* b.y__AT0 b.y__AT0)))
(let ((.def_94 (* 100.0 .def_50)))
(let ((.def_103 (+ .def_94 .def_102)))
(let ((.def_96 (* 100.0 b.x__AT0)))
(let ((.def_104 (+ .def_96 .def_103)))
(let ((.def_105 (<= 0.0 .def_104)))
(let ((.def_51 (+ b.x__AT0 .def_50)))
(let ((.def_52 (<= 0.0 .def_51)))
(let ((.def_106 (and .def_52 .def_105)))
(let ((.def_241 (and .def_106 .def_240)))
(let ((.def_58 (<= b.speed_loss__AT0 (/ 1 2))))
(let ((.def_55 (<= (/ 1 10) b.speed_loss__AT0)))
(let ((.def_59 (and .def_55 .def_58)))
(let ((.def_242 (and .def_59 .def_241)))
(let ((.def_60 (and .def_52 .def_59)))
(let ((.def_47 (not b.EVENT.0__AT0)))
(let ((.def_45 (not b.EVENT.1__AT0)))
(let ((.def_48 (or .def_45 .def_47)))
(let ((.def_6 (not b.counter.0__AT0)))
(let ((.def_4 (not b.counter.1__AT0)))
(let ((.def_38 (or .def_4 .def_6)))
(let ((.def_42 (or b.counter.3__AT0 .def_38)))
(let ((.def_39 (or b.counter.2__AT0 .def_38)))
(let ((.def_9 (not b.counter.2__AT0)))
(let ((.def_37 (or .def_6 .def_9)))
(let ((.def_40 (and .def_37 .def_39)))
(let ((.def_12 (not b.counter.3__AT0)))
(let ((.def_41 (or .def_12 .def_40)))
(let ((.def_43 (and .def_41 .def_42)))
(let ((.def_49 (and .def_43 .def_48)))
(let ((.def_61 (and .def_49 .def_60)))
(let ((.def_34 (= b.speed_y__AT0 1.0 )))
(let ((.def_31 (= b.speed_x__AT0 1.0 )))
(let ((.def_27 (= b.y__AT0 10.0 )))
(let ((.def_23 (= b.x__AT0 (- 9.0) )))
(let ((.def_17 (= b.time__AT0 0.0 )))
(let ((.def_19 (and .def_17 b.event_is_timed__AT0)))
(let ((.def_24 (and .def_19 .def_23)))
(let ((.def_28 (and .def_24 .def_27)))
(let ((.def_32 (and .def_28 .def_31)))
(let ((.def_35 (and .def_32 .def_34)))
(let ((.def_7 (and .def_4 .def_6)))
(let ((.def_10 (and .def_7 .def_9)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_36 (and .def_13 .def_35)))
(let ((.def_62 (and .def_36 .def_61)))
(let ((.def_14 (not .def_13)))
(let ((.def_63 (and .def_14 .def_62)))
(let ((.def_243 (and .def_63 .def_242)))
.def_243)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
