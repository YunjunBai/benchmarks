(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the encoding obtained with quantifier elimination using redlog encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:40:04 2012
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.x__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.time__AT0 () Real)
(declare-fun b.g__AT0 () Real)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(assert (let ((.def_73 (* b.x__AT0 b.x__AT0)))
(let ((.def_69 (* 5.0 b.delta__AT0)))
(let ((.def_70 (* b.delta__AT0 .def_69)))
(let ((.def_71 (* (- 1.0) .def_70)))
(let ((.def_76 (+ .def_71 .def_73)))
(let ((.def_67 (* b.delta__AT0 b.speed_y__AT0)))
(let ((.def_77 (+ .def_67 .def_76)))
(let ((.def_78 (+ b.y__AT0 .def_77)))
(let ((.def_79 (<= 0.0 .def_78)))
(let ((.def_115 (not .def_79)))
(let ((.def_96 (* (- 1.0) b.speed_y__AT0)))
(let ((.def_97 (* 10.0 b.delta__AT0)))
(let ((.def_98 (+ .def_97 .def_96)))
(let ((.def_99 (<= .def_98 0.0 )))
(let ((.def_116 (and .def_99 .def_115)))
(let ((.def_108 (+ b.y__AT0 .def_73)))
(let ((.def_113 (<= 0.0 .def_108)))
(let ((.def_110 (<= b.speed_y__AT0 0.0 )))
(let ((.def_114 (or .def_110 .def_113)))
(let ((.def_117 (or .def_114 .def_116)))
(let ((.def_109 (<= .def_108 0.0 )))
(let ((.def_111 (and .def_109 .def_110)))
(let ((.def_103 (<= 0.0 .def_98)))
(let ((.def_104 (not .def_103)))
(let ((.def_101 (= .def_78 0.0 )))
(let ((.def_102 (not .def_101)))
(let ((.def_105 (or .def_102 .def_104)))
(let ((.def_100 (or .def_79 .def_99)))
(let ((.def_106 (and .def_100 .def_105)))
(let ((.def_83 (* 20.0 b.x__AT0)))
(let ((.def_84 (* b.x__AT0 .def_83)))
(let ((.def_81 (* b.speed_y__AT0 b.speed_y__AT0)))
(let ((.def_85 (+ .def_81 .def_84)))
(let ((.def_86 (* 20.0 b.y__AT0)))
(let ((.def_88 (+ .def_86 .def_85)))
(let ((.def_91 (<= .def_88 0.0 )))
(let ((.def_92 (not .def_91)))
(let ((.def_107 (or .def_92 .def_106)))
(let ((.def_112 (or .def_107 .def_111)))
(let ((.def_118 (and .def_112 .def_117)))
(let ((.def_89 (<= 0.0 .def_88)))
(let ((.def_90 (not .def_89)))
(let ((.def_119 (or .def_90 .def_118)))
(let ((.def_64 (<= 0.0 b.delta__AT0)))
(let ((.def_65 (not .def_64)))
(let ((.def_80 (or .def_65 .def_79)))
(let ((.def_120 (and .def_80 .def_119)))
(let ((.def_44 (not b.EVENT.0__AT0)))
(let ((.def_42 (not b.EVENT.1__AT0)))
(let ((.def_61 (and .def_42 .def_44)))
(let ((.def_62 (not .def_61)))
(let ((.def_121 (or .def_62 .def_120)))
(let ((.def_55 (<= b.g__AT0 10.0 )))
(let ((.def_54 (<= 8.0 b.g__AT0)))
(let ((.def_56 (and .def_54 .def_55)))
(let ((.def_49 (* (- 1.0) b.x__AT0)))
(let ((.def_50 (* b.x__AT0 .def_49)))
(let ((.def_51 (<= .def_50 b.y__AT0)))
(let ((.def_57 (and .def_51 .def_56)))
(let ((.def_45 (or .def_42 .def_44)))
(let ((.def_9 (not b.counter.0__AT0)))
(let ((.def_6 (not b.counter.1__AT0)))
(let ((.def_35 (or .def_6 .def_9)))
(let ((.def_39 (or b.counter.3__AT0 .def_35)))
(let ((.def_36 (or b.counter.2__AT0 .def_35)))
(let ((.def_4 (not b.counter.2__AT0)))
(let ((.def_34 (or .def_4 .def_9)))
(let ((.def_37 (and .def_34 .def_36)))
(let ((.def_14 (not b.counter.3__AT0)))
(let ((.def_38 (or .def_14 .def_37)))
(let ((.def_40 (and .def_38 .def_39)))
(let ((.def_46 (and .def_40 .def_45)))
(let ((.def_58 (and .def_46 .def_57)))
(let ((.def_10 (and .def_6 .def_9)))
(let ((.def_31 (and .def_4 .def_10)))
(let ((.def_32 (and .def_14 .def_31)))
(let ((.def_29 (= b.y__AT0 10.0 )))
(let ((.def_25 (= b.x__AT0 0.0 )))
(let ((.def_21 (= b.time__AT0 0.0 )))
(let ((.def_23 (and .def_21 b.event_is_timed__AT0)))
(let ((.def_26 (and .def_23 .def_25)))
(let ((.def_30 (and .def_26 .def_29)))
(let ((.def_33 (and .def_30 .def_32)))
(let ((.def_59 (and .def_33 .def_58)))
(let ((.def_16 (or .def_10 b.counter.3__AT0)))
(let ((.def_11 (or b.counter.2__AT0 .def_10)))
(let ((.def_7 (or .def_4 .def_6)))
(let ((.def_12 (and .def_7 .def_11)))
(let ((.def_15 (or .def_12 .def_14)))
(let ((.def_17 (and .def_15 .def_16)))
(let ((.def_18 (not .def_17)))
(let ((.def_60 (and .def_18 .def_59)))
(let ((.def_122 (and .def_60 .def_121)))
.def_122))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
